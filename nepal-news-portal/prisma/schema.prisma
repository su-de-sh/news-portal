// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  name        String
  email       String    @unique
  password    String
  role        UserRole  @default(READER)
  avatar      String?
  bio         String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  articles    News[]
  comments    Comment[]

  @@map("users")
}

model News {
  id          Int      @id @default(autoincrement())
  title       String
  slug        String   @unique
  excerpt     String?
  content     String
  image       String?
  published   Boolean  @default(false)
  featured    Boolean  @default(false)
  views       Int      @default(0)
  publishedAt DateTime @default(now())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  authorId    Int
  categoryId  Int
  author      User     @relation(fields: [authorId], references: [id], onDelete: Cascade)
  category    Category @relation(fields: [categoryId], references: [id])
  tags        Tag[]    @relation("NewsToTag")
  comments    Comment[]

  @@map("news")
}

model Category {
  id          Int    @id @default(autoincrement())
  name        String @unique
  slug        String @unique
  description String?
  color       String @default("#3B82F6")
  news        News[]

  @@map("categories")
}

model Tag {
  id   Int    @id @default(autoincrement())
  name String @unique
  slug String @unique
  news News[] @relation("NewsToTag")

  @@map("tags")
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  authorId  Int
  newsId    Int
  author    User     @relation(fields: [authorId], references: [id], onDelete: Cascade)
  news      News     @relation(fields: [newsId], references: [id], onDelete: Cascade)

  @@map("comments")
}

enum UserRole {
  ADMIN
  EDITOR
  AUTHOR
  READER
}